@use 'sass:math';
$base-borderRadius: $borderRadius * 10;
$base-borderWidth: $borderWidth * 1.7;
$base-marginX: $marginX;
$base-marginY: $marginY;
$base-paddingX: $paddingX;
$base-paddingY: $paddingY;
$base-fontSize: 0.9rem;
$mask-marginX: $marginX * 3;
$mask-marginY: $marginY * 0.8;

& {
	// padding: $base-paddingY $base-paddingX;
	position: relative;
	border-width: unset;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	align-self: center;
	margin: $base-marginY $base-marginX;
	padding-inline-end: $mask-marginX;
	font-size: $base-fontSize;
	border-radius: $base-borderRadius;
	outline-style: solid;
	outline-width: $base-borderWidth * 0.5;
	outline-color: transparent;
	color: hsl(var(--fg-color));
	transition: outline 0.3s;
	@include truncate(calc(100% - 1rem));
	.inputMask {
		position: relative;
		margin: $mask-marginY $mask-marginX;
		width: 23px;
		height: 23px;
		border-color: hsl(var(--base));
		border-radius: $base-borderRadius;
		border-width: $base-borderWidth;
		border-style: solid;
		transition: background-color 0.3s, border 0.3s, box-shadow 0.3s;
		// overflow: hidden;
		> span {
			position: absolute;
			top: 0%;
			right: 0%;
			width: 100%;
			border-radius: $base-borderRadius;
			height: 100%;
			transition: background-color 0.3s, transform 0.3s, opacity 0.3s;
			opacity: 0;
			transform: scale(0);
			&::before {
				content: '';
				background-color: hsla(var(--fg-color) / 0%);
				border-radius: $base-borderRadius;
				position: absolute;
				width: 70%;
				height: 70%;
				top: 15%;
				right: 15%;
				transition: background-color 0.3s, width 0.3s, height 0.3s, top 0.3s, right 0.3s;
			}
		}
	}
	input {
		cursor: pointer;
		margin: auto;
		opacity: 0;
		top: 0;
		right: 0;
		width: 100%;
		height: 100%;
		position: absolute;
		z-index: 1;
		&:checked ~ .inputMask {
			span {
				opacity: 1;
				transform: scale(0.93);
				background-color: hsl(var(--base));
				&::before {
					background-color: hsla(var(--fg-color) / 100%);
					width: 30%;
					height: 30%;
					top: 35%;
					right: 35%;
				}
			}
		}
		&:disabled ~ .inputMask {
			border-color: hsl(var(--base) / 50%);
			span {
				background-color: hsl(var(--base) / 50%);
				&::before {
					background-color: hsla(var(--base-font) / 50%);
				}
			}
		}
		&:disabled ~ label {
			opacity: 0.5;
		}
		@include action-hover {
			&:not(:checked) ~ .inputMask {
				border-color: hsl(var(--natural));
			}
		}
	}
	&.shadow {
		@include action-hover {
			input:not(:disabled) ~ .inputMask {
				background-color: hsl(var(--natural));
				box-shadow: 0 3px 60px 0 hsla(var(--base) / 100%);
			}
			input:checked:not(:disabled) ~ .inputMask {
				box-shadow: 0 3px 8px 0 hsla(var(--base) / 35%);
			}
		}
	}
	&:focus-within {
		outline-color: hsla(var(--base) / 5%);
	}
}
